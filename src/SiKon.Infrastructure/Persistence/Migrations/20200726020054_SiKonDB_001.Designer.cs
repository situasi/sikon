// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SiKon.Infrastructure.Persistence;

namespace SiKon.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(SiKonDBContext))]
    [Migration("20200726020054_SiKonDB_001")]
    partial class SiKonDB_001
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SiKon.Domain.Entities.Member", b =>
                {
                    b.Property<int>("MemberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("MemberID");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("SiKon.Domain.Entities.TCPEndpoint", b =>
                {
                    b.Property<int>("TCPEndpointID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CheckIntervalInMinutes")
                        .HasColumnType("integer");

                    b.Property<string>("CommandString")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("ErrorString")
                        .HasColumnType("text");

                    b.Property<string>("FriendlyName")
                        .HasColumnType("text");

                    b.Property<int?>("MemberID")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<int>("PortNumber")
                        .HasColumnType("integer");

                    b.Property<int>("RequestTimeOutInSeconds")
                        .HasColumnType("integer");

                    b.Property<string>("SuccessString")
                        .HasColumnType("text");

                    b.Property<string>("TargetAddress")
                        .HasColumnType("text");

                    b.HasKey("TCPEndpointID");

                    b.HasIndex("MemberID");

                    b.ToTable("TCPEndpoints");
                });

            modelBuilder.Entity("SiKon.Domain.Entities.TCPEndpoint", b =>
                {
                    b.HasOne("SiKon.Domain.Entities.Member", "Member")
                        .WithMany("TCPEndpoints")
                        .HasForeignKey("MemberID");
                });
#pragma warning restore 612, 618
        }
    }
}
